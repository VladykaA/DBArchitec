Создать веб приложение для проведения голосования.
Автор может создать свою форму опросника\голосования.//макет

1. Для создания опроса или участия в голосовании пользователь должен авторизироватся.
Пользователь должен ввести имя, имеил, пароль. Пользователь может изменять свои данные или удалится.

2. Для опроса пользователь может выбрать тип ответов:
- radiobutton если пользователь может выбрать только один вариант для одного вопроса;
- checkbox если пользователь может выбрать множиство вариантов для одного вопроса;
для каждого вопроса есть поле для текста, к вопросу можно подгрузить картинку(PNG, JPEG) или файл (PDF или txt);
Вопросов может быть не органиченное колличество.
Автор может поставить дедлайн для голосования, что после указаной даты или времени голосование закрывается и по линке будет видно только результат.
После начала голосования, автор может редактировать опрос, удалить, добавлять или изменять вопросы.

3. Линк на содзанный опрос автор может отправить по почте. Любой зарегистрированный пользователь может принять участие в голосовании
перейдя по ссылке. Если не зарегистрирован, то должен вначале зарегистрироватся и потом приянть участие в головании.
Каждый участник может голосовать один раз, он не может по ссылке зайти еще раз и проголосовать дважды и более, только поменять свой выбор.

4. По завершению голосования каждый участник может увидеть результат голосования. Результат показывает количество проголовавших напротив каждого вопроса,
а также в процентном соотношении напротив каждого вопроса, если есть дата окончания.

В приложении использовать Spring 5, JPA(JPQL, NamedQueries, Criteria queries), JQuery или другой фрейм для front end.

			  **** Технические требования****
Приложение должно:
- использовать куки для возобновления сессиии.
- быть максимально плотно покрыто тестами.
- содержать четкое логическое разделение между представление, логикой и источником данных.
- cборка проекта/запуск тестов должна производится средствами maven.
- готовое приложение должно быть доступно на github репозитории.
- все ключевые моменты логики приложения должны содержать поясняющие JavaDocs.
- обязательно должна присутствовать валидация данных.
----------------------
Domains:

User(name, password, List<Questionnaire>, boolean isAuthor) OneToManyBi(User -> many Questionnaire)
Questionnaire(user, List<Question>, LocalDateTime deadLine)
Question: question, answer(List<String>), number, List<Path> to files

Store image on server:



